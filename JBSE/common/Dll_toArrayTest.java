package common;

import static java.lang.System.identityHashCode;
import static org.junit.Assert.*;

import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.util.HashSet;
import sun.misc.Unsafe;

import org.junit.Test;

public class Dll_toArrayTest {
    private static class AccessibleObject {
        private final Object target;
        AccessibleObject(Object o) {
            target = o;
        }
        void set(String fieldName, Object value) {
            try {
                final Field p = target.getClass().getDeclaredField(fieldName);
                p.setAccessible(true);
                p.set(target, value);
            } catch (IllegalArgumentException | IllegalAccessException
                | NoSuchFieldException | SecurityException e) {
                throw new RuntimeException(e);
            }
        }
        AccessibleObject get(String fieldName) {
            try {
                final Field p = target.getClass().getDeclaredField(fieldName);
                p.setAccessible(true);
                return new AccessibleObject(p.get(target));
            } catch (IllegalArgumentException | IllegalAccessException
                | NoSuchFieldException | SecurityException e) {
                throw new RuntimeException(e);
            }
        }
        Object getValue() {
            return target;
        }
    }

    private static final Unsafe UNSAFE; //ugly!

    static {
        final Field uns;
        try {
            uns = Unsafe.class.getDeclaredField("theUnsafe");
            uns.setAccessible(true);
            UNSAFE = (Unsafe) uns.get(null);
        } catch (NoSuchFieldException e) {
            throw new RuntimeException(e);
        } catch (IllegalAccessException e) {
            throw new RuntimeException(e);
        }
    }

    private static Object newInstance(String type) {
        try {
            final Class<?> clazz = Class.forName(type);
            return clazz.cast(UNSAFE.allocateInstance(clazz));
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        } catch (InstantiationException e) {
            throw new RuntimeException(e);
        }
    }

    private static Object newArray(String memberType, int length) {
        try {
            final Class<?> clazz = Class.forName(memberType);
            return Array.newInstance(clazz, length);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }
    }

    public class ObjectField {
        private final Object obj;
        private final Field fld;
        public ObjectField(Object obj, String fldName) {
            this.obj = obj;
            try {
                this.fld = obj.getClass().getDeclaredField(fldName);
            } catch (NoSuchFieldException | SecurityException e) {
                throw new RuntimeException(e);
            }
        }
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = 1;
            result = prime * result + ((fld == null) ? 0 : fld.hashCode());
            result = prime * result + ((obj == null) ? 0 : identityHashCode(obj));
            return result;
        }
        @Override
        public boolean equals(Object obj) {
            if (this == obj) {
                return true;
            }
            if (obj == null) {
                return false;
            }
            if (getClass() != obj.getClass()) {
                return false;
            }
            final ObjectField other = (ObjectField) obj;
            if (this.fld == null) {
                if (other.fld != null) {
                    return false;
                }
            } else if (!fld.equals(other.fld)) {
                return false;
            }
            if (this.obj == null) {
                if (other.obj != null) {
                    return false;
                }
            } else if (this.obj != other.obj) {
                return false;
            }
            return true;
        }
    }

    public HashSet<ObjectField> nullObjectFields;

//.1//.1//.1 {ROOT}:this.header.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1 {ROOT}:this.header.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test0() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test1() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test2() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test3() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test4() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test5() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test6() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test7() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test8() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test9() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test10() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test11() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test12() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test13() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test14() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test15() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test16() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test17() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1//.1//.1.2 trace violates an assumption.
    @Test
    public void test18() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1//.1.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1//.1.2//.1 trace is safe.
//.1//.1//.1//.1//.1//.1//.1//.1.2.2 trace violates an assumption.
//.1//.1//.1//.1//.1//.1//.1.2//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test19() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test20() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test21() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test22() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test23() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test24() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test25() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test26() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test27() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test28() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test29() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test30() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test31() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test32() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test33() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test34() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test35() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test36() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.2//.1.2 trace violates an assumption.
    @Test
    public void test37() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.2.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.2.2//.1 trace is safe.
//.1//.1//.1//.1//.1//.1//.1.2.2.2 trace violates an assumption.
//.1//.1//.1//.1//.1//.1//.1.3//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test38() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test39() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test40() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test41() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test42() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test43() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test44() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test45() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test46() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test47() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test48() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test49() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test50() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test51() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test52() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test53() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test54() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test55() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.3//.1.2 trace violates an assumption.
    @Test
    public void test56() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.3.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.3.2//.1 trace is safe.
//.1//.1//.1//.1//.1//.1//.1.3.2.2 trace violates an assumption.
//.1//.1//.1//.1//.1//.1//.1.4//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test57() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test58() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test59() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test60() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test61() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test62() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test63() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test64() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test65() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test66() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test67() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test68() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test69() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test70() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test71() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test72() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test73() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test74() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.4//.1.2 trace violates an assumption.
    @Test
    public void test75() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.4.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.4.2//.1 trace is safe.
//.1//.1//.1//.1//.1//.1//.1.4.2.2 trace violates an assumption.
//.1//.1//.1//.1//.1//.1//.1.5//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test76() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test77() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test78() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test79() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test80() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test81() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test82() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test83() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test84() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test85() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test86() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test87() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test88() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test89() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test90() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test91() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test92() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test93() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1//.1//.1//.1.5//.1.2 trace violates an assumption.
    @Test
    public void test94() {
        //test case for state //.1//.1//.1//.1//.1//.1//.1.5.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1//.1//.1.5.2//.1 trace is safe.
//.1//.1//.1//.1//.1//.1//.1.5.2.2 trace violates an assumption.
//.1//.1//.1//.1//.1//.1.2 trace violates an assumption.
    @Test
    public void test95() {
        //test case for state //.1//.1//.1//.1//.1.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 1);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", __ROOT_this); // {R7} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R8} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 1
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1//.1.2//.1 trace is safe.
//.1//.1//.1//.1//.1.2.2 trace violates an assumption.
//.1//.1//.1//.1.2//.1 {ROOT}:this.header.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1//.1 {ROOT}:this.header.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1//.1//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test96() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test97() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test98() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test99() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test100() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test101() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test102() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test103() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test104() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test105() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test106() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test107() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test108() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test109() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test110() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test111() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test112() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test113() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1//.1//.1.2 trace violates an assumption.
    @Test
    public void test114() {
        //test case for state //.1//.1//.1//.1.2//.1//.1//.1.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1//.1.2//.1 trace is safe.
//.1//.1//.1//.1.2//.1//.1//.1.2.2 trace violates an assumption.
//.1//.1//.1//.1.2//.1//.1.2//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1.2//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1.2//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test115() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test116() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test117() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test118() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test119() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test120() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test121() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test122() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test123() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test124() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test125() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test126() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test127() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test128() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test129() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test130() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test131() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test132() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.2//.1.2 trace violates an assumption.
    @Test
    public void test133() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.2.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.2.2//.1 trace is safe.
//.1//.1//.1//.1.2//.1//.1.2.2.2 trace violates an assumption.
//.1//.1//.1//.1.2//.1//.1.3//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1.3//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1.3//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test134() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test135() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test136() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test137() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test138() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test139() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test140() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test141() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test142() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test143() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test144() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test145() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test146() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test147() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test148() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test149() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test150() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test151() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.3//.1.2 trace violates an assumption.
    @Test
    public void test152() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.3.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.3.2//.1 trace is safe.
//.1//.1//.1//.1.2//.1//.1.3.2.2 trace violates an assumption.
//.1//.1//.1//.1.2//.1//.1.4//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1.4//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1.4//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test153() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test154() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test155() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test156() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test157() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test158() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test159() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test160() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test161() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test162() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test163() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test164() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test165() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test166() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test167() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test168() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test169() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test170() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.4//.1.2 trace violates an assumption.
    @Test
    public void test171() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.4.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.4.2//.1 trace is safe.
//.1//.1//.1//.1.2//.1//.1.4.2.2 trace violates an assumption.
//.1//.1//.1//.1.2//.1//.1.5//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1.5//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.2//.1//.1.5//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test172() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test173() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test174() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test175() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test176() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test177() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test178() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test179() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test180() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test181() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test182() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test183() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test184() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test185() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test186() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test187() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test188() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test189() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.2//.1//.1.5//.1.2 trace violates an assumption.
    @Test
    public void test190() {
        //test case for state //.1//.1//.1//.1.2//.1//.1.5.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2//.1//.1.5.2//.1 trace is safe.
//.1//.1//.1//.1.2//.1//.1.5.2.2 trace violates an assumption.
//.1//.1//.1//.1.2//.1.2 trace violates an assumption.
    @Test
    public void test191() {
        //test case for state //.1//.1//.1//.1.2.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 1);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R7} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R8} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 1
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.2.2//.1 trace is safe.
//.1//.1//.1//.1.2.2.2 trace violates an assumption.
//.1//.1//.1//.1.3//.1 {ROOT}:this.header.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1//.1 {ROOT}:this.header.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1//.1//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test192() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test193() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test194() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test195() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test196() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test197() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test198() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test199() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test200() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test201() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test202() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test203() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test204() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test205() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test206() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test207() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test208() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test209() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1//.1//.1.2 trace violates an assumption.
    @Test
    public void test210() {
        //test case for state //.1//.1//.1//.1.3//.1//.1//.1.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1//.1.2//.1 trace is safe.
//.1//.1//.1//.1.3//.1//.1//.1.2.2 trace violates an assumption.
//.1//.1//.1//.1.3//.1//.1.2//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1.2//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1.2//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test211() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test212() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test213() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test214() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test215() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test216() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test217() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test218() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test219() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test220() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test221() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test222() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test223() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test224() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test225() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test226() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test227() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test228() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.2//.1.2 trace violates an assumption.
    @Test
    public void test229() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.2.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.2.2//.1 trace is safe.
//.1//.1//.1//.1.3//.1//.1.2.2.2 trace violates an assumption.
//.1//.1//.1//.1.3//.1//.1.3//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1.3//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1.3//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test230() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test231() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test232() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test233() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test234() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test235() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test236() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test237() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test238() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test239() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test240() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test241() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test242() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test243() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test244() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test245() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test246() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test247() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.3//.1.2 trace violates an assumption.
    @Test
    public void test248() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.3.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.3.2//.1 trace is safe.
//.1//.1//.1//.1.3//.1//.1.3.2.2 trace violates an assumption.
//.1//.1//.1//.1.3//.1//.1.4//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1.4//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1.4//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test249() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test250() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test251() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test252() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test253() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test254() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test255() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test256() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test257() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test258() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test259() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test260() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test261() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test262() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test263() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test264() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test265() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test266() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.4//.1.2 trace violates an assumption.
    @Test
    public void test267() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.4.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.4.2//.1 trace is safe.
//.1//.1//.1//.1.3//.1//.1.4.2.2 trace violates an assumption.
//.1//.1//.1//.1.3//.1//.1.5//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1.5//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.3//.1//.1.5//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test268() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test269() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test270() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test271() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test272() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test273() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test274() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test275() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test276() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test277() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test278() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test279() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test280() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test281() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test282() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test283() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test284() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test285() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.3//.1//.1.5//.1.2 trace violates an assumption.
    @Test
    public void test286() {
        //test case for state //.1//.1//.1//.1.3//.1//.1.5.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3//.1//.1.5.2//.1 trace is safe.
//.1//.1//.1//.1.3//.1//.1.5.2.2 trace violates an assumption.
//.1//.1//.1//.1.3//.1.2 trace violates an assumption.
    @Test
    public void test287() {
        //test case for state //.1//.1//.1//.1.3.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 1);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R7} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R8} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 1
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.3.2//.1 trace is safe.
//.1//.1//.1//.1.3.2.2 trace violates an assumption.
//.1//.1//.1//.1.4//.1 {ROOT}:this.header.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1//.1 {ROOT}:this.header.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1//.1//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test288() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test289() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test290() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test291() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test292() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test293() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test294() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test295() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test296() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test297() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test298() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test299() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test300() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test301() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test302() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test303() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test304() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test305() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1//.1//.1.2 trace violates an assumption.
    @Test
    public void test306() {
        //test case for state //.1//.1//.1//.1.4//.1//.1//.1.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", __ROOT_this); // {R11} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1//.1.2//.1 trace is safe.
//.1//.1//.1//.1.4//.1//.1//.1.2.2 trace violates an assumption.
//.1//.1//.1//.1.4//.1//.1.2//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1.2//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1.2//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test307() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test308() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test309() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test310() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test311() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test312() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test313() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test314() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test315() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test316() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test317() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test318() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test319() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test320() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test321() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test322() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test323() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test324() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.2//.1.2 trace violates an assumption.
    @Test
    public void test325() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.2.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R11} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.2.2//.1 trace is safe.
//.1//.1//.1//.1.4//.1//.1.2.2.2 trace violates an assumption.
//.1//.1//.1//.1.4//.1//.1.3//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1.3//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1.3//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test326() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test327() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test328() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test329() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test330() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test331() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test332() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test333() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test334() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test335() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test336() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test337() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test338() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test339() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test340() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test341() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test342() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test343() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.3//.1.2 trace violates an assumption.
    @Test
    public void test344() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.3.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R11} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.3.2//.1 trace is safe.
//.1//.1//.1//.1.4//.1//.1.3.2.2 trace violates an assumption.
//.1//.1//.1//.1.4//.1//.1.4//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1.4//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1.4//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test345() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test346() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test347() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test348() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test349() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test350() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test351() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test352() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test353() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test354() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test355() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test356() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test357() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test358() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test359() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test360() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test361() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test362() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.4//.1.2 trace violates an assumption.
    @Test
    public void test363() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.4.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R11} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.4.2//.1 trace is safe.
//.1//.1//.1//.1.4//.1//.1.4.2.2 trace violates an assumption.
//.1//.1//.1//.1.4//.1//.1.5//.1 {ROOT}:this.header.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1.5//.1//.1//.1 {ROOT}:this.header.next.next.next.element not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
//.1//.1//.1//.1.4//.1//.1.5//.1//.1//.1//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test364() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1//.1//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1//.1//.1 trace exhausted depth scope.
    @Test
    public void test365() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1//.1.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test366() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1//.1.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", __ROOT_this); // {R15} == Object[0] (aliases {ROOT}:this)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1//.1.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.2//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test367() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.2//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.2//.1 trace exhausted depth scope.
    @Test
    public void test368() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.2.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.2.2//.1 trace exhausted depth scope.
    @Test
    public void test369() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.2.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R15} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.2.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.3//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test370() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.3//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.3//.1 trace exhausted depth scope.
    @Test
    public void test371() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.3.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.3.2//.1 trace exhausted depth scope.
    @Test
    public void test372() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.3.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").getValue()); // {R15} == Object[3] (aliases {ROOT}:this.header.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.3.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.4//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test373() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.4//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.4//.1 trace exhausted depth scope.
    @Test
    public void test374() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.4.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.4.2//.1 trace exhausted depth scope.
    @Test
    public void test375() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.4.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue()); // {R15} == Object[4] (aliases {ROOT}:this.header.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.4.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.5//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test376() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.5//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.5//.1 trace exhausted depth scope.
    @Test
    public void test377() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.5.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.5.2//.1 trace exhausted depth scope.
    @Test
    public void test378() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.5.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue()); // {R15} == Object[5] (aliases {ROOT}:this.header.next.next.next)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.5.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.6//.1 {ROOT}:this.header.next.next.next.next._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test379() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.6//.1[2]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R16} == Object[6] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R22} == Object[0] (aliases {ROOT}:this)
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.6//.1 trace exhausted depth scope.
    @Test
    public void test380() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.6.2//.1[0]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 3);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.6.2//.1 trace exhausted depth scope.
    @Test
    public void test381() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5//.1//.1.6.2.2[1]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 4);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R12} == Object[5] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("_owner", __ROOT_this); // {R18} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 3
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").getValue(), "element")); // {R15} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R16} == Object[2] (aliases {ROOT}:this.header)
         // {V0} != 3
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5//.1//.1.6.2.2 trace exhausted depth scope.
//.1//.1//.1//.1.4//.1//.1.5//.1.2 trace violates an assumption.
    @Test
    public void test382() {
        //test case for state //.1//.1//.1//.1.4//.1//.1.5.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 2);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", newInstance("common.LinkedList$Entry")); // {R8} == Object[4] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("_owner", __ROOT_this); // {R14} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 2
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").get("next").getValue(), "element")); // {R11} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R12} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 2
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4//.1//.1.5.2//.1 trace is safe.
//.1//.1//.1//.1.4//.1//.1.5.2.2 trace violates an assumption.
//.1//.1//.1//.1.4//.1.2 trace violates an assumption.
    @Test
    public void test383() {
        //test case for state //.1//.1//.1//.1.4.2//.1[14]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 1);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", newInstance("common.LinkedList$Entry")); // {R4} == Object[3] (fresh)
        new AccessibleObject(__ROOT_this).get("header").get("next").set("_owner", __ROOT_this); // {R10} == Object[0] (aliases {ROOT}:this)
         // {V0} >= 1
        new AccessibleObject(__ROOT_this).get("header").get("next").set("element", null);this.nullObjectFields.add(new ObjectField(new AccessibleObject(__ROOT_this).get("header").get("next").getValue(), "element")); // {R7} == null
        new AccessibleObject(__ROOT_this).get("header").get("next").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R8} == Object[2] (aliases {ROOT}:this.header)
         // {V0} == 1
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1//.1//.1.4.2//.1 trace is safe.
//.1//.1//.1//.1.4.2.2 trace violates an assumption.
//.1//.1//.1.2 trace violates an assumption.
//.1//.1.2 {ROOT}:this.header._owner not expanded. It may be a hint of too strong user-defined constraints, possibly correct when enforcing redundancy by representation invariant.
    @Test
    public void test384() {
        //test case for state //.1//.1.2//.1[15]
        this.nullObjectFields = new HashSet<>();
        common.LinkedList __ROOT_this = (common.LinkedList) newInstance("common.LinkedList"); // {R0} == Object[0] (fresh)
        ; // pre_init(common/LinkedList)
        ; // pre_init(java/util/AbstractSequentialList)
        ; // pre_init(java/util/AbstractList)
        ; // pre_init(java/util/AbstractCollection)
        ; // !pre_init(java/lang/Object)
        new AccessibleObject(__ROOT_this).set("size", 0);  // {V0} >= 0
        ; // pre_init(jbse/meta/Analysis)
        new AccessibleObject(__ROOT_this).set("header", newInstance("common.LinkedList$Entry")); // {R1} == Object[2] (fresh)
        new AccessibleObject(__ROOT_this).get("header").set("next", new AccessibleObject(__ROOT_this).get("header").getValue()); // {R4} == Object[2] (aliases {ROOT}:this.header)
        new AccessibleObject(__ROOT_this).get("header").set("_owner", __ROOT_this); // {R6} == Object[0] (aliases {ROOT}:this)
         // {V0} == 0
        if (__ROOT_this.repOK()) {System.out.println("true"); __ROOT_this.toArray();}
    }
//.1//.1.2//.1 trace is safe.
//.1//.1.2.2 trace violates an assumption.
//.1.2 trace violates an assumption.
}
